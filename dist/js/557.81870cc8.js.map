{"version":3,"file":"js/557.81870cc8.js","mappings":"ijBAsBQ,MAAM,cAAEA,IAAkBC,EAAAA,EAAAA,KACpBC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,OACR,eAAEC,EAAc,aAAEC,IAAiBC,EAAAA,EAAAA,KAEnCC,EAAOL,EAAMM,MAAMD,KACnBE,GAAYC,EAAAA,EAAAA,KAAI,GAChBC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAaF,EAAAA,EAAAA,IAAI,IAGvBG,eAAeC,IACX,MAAMC,EAAO,CAACR,OAAMI,SAAUA,EAASK,OAEvC,GADAP,EAAUO,OAAQ,EACdD,EAAKR,MAAQQ,EAAKJ,SAAU,CAC5B,MAAMM,QAAYnB,EAAciB,GAChCN,EAAUO,OAAQ,EACK,MAAnBC,EAAIC,YACJlB,EAAOmB,KAAK,wBACZf,EAAe,mEAEjBC,EAAaY,EAAIG,QAEvB,CACR,C,srBC3CJ,MAAMC,EAAc,EAEpB,O","sources":["webpack://magicter-vpn/./src/pages/auth/ResetPwdPage.vue","webpack://magicter-vpn/./src/pages/auth/ResetPwdPage.vue?d078"],"sourcesContent":["<template>\n    <div class=\"flex flex-col items-center gap-4 w-full text-black-500\">\n            <h1 class=\"text-3xl font-bold\">Create new password</h1>\n            <p class=\"text-sm\">Enter your new password, and confirm.</p>\n            <form action=\"\" class=\"w-full flex flex-col gap-3 text-sm\">\n                <InputDefault v-model=\"password\" :type=\"'password'\" :placeholder=\"'Enter new password '\"/> \n                <InputDefault v-model=\"confirmPwd\" :type=\"'password'\" :placeholder=\"'Confirm new password '\"/>\n                <ButtonPrimary :link=\"''\" :is-loading=\"isLoading\" @click=\"resetPasswordFunc\">Update password</ButtonPrimary> \n            </form>\n            <router-link class=\"text-purple-500 font-bold text-sm mt-2\" to=\"/auth/signin\">Back to sign in</router-link>\n    \n        </div>\n    </template>\n    \n    <script setup>\n        import { ref } from 'vue'\n        import { useRouter, useRoute  } from 'vue-router';\n        import ButtonPrimary from '../../molecules/ButtonPrimary.vue';\n        import InputDefault from '../../molecules/InputDefault.vue';\n        import { useAPI } from '@/composables/useAPI'; \n        import { useToast } from '@/composables/useToast.js'\n\n        const { resetPassword } = useAPI()\n        const router = useRouter();\n        const route = useRoute();\n        const { showSuccessMsg, showErrorMsg } = useToast();\n\n        const code = route.query.code\n        const isLoading = ref(false);\n        const password = ref('');\n        const confirmPwd = ref('');\n\n\n        async function resetPasswordFunc() {\n            const data = {code, password: password.value};\n            isLoading.value = true;\n            if (data.code && data.password) {\n                const res = await resetPassword(data);\n                isLoading.value = false;\n                if (res.statusCode === 200) {\n                    router.push('/auth/confirm-signin');\n                    showSuccessMsg('Success, Password updated kindly login with your new password.')\n                } else {\n                  showErrorMsg(res.message);\n                }\n            }        \n    }\n\n\n</script>","import script from \"./ResetPwdPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ResetPwdPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["resetPassword","useAPI","router","useRouter","route","useRoute","showSuccessMsg","showErrorMsg","useToast","code","query","isLoading","ref","password","confirmPwd","async","resetPasswordFunc","data","value","res","statusCode","push","message","__exports__"],"sourceRoot":""}