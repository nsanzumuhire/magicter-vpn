{"version":3,"file":"js/742.4ececdb4.js","mappings":"knBAiCI,MAAM,WAAEA,EAAU,WAAEC,EAAU,cAACC,EAAa,SAAEC,IAAaC,EAAAA,EAAAA,MACrD,SAAEC,IAAaC,EAAAA,EAAAA,MACf,WAAEC,IAAeC,EAAAA,EAAAA,MACjB,eAAEC,EAAc,aAAEC,IAAiBC,EAAAA,EAAAA,KAEnCC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,IAAIf,EAAW,UACvBgB,GAAQD,EAAAA,EAAAA,IAAI,CAAC,EAAG,EAAG,EAAG,IACtBE,GAAYF,EAAAA,EAAAA,IAAI,IAChBG,GAAYH,EAAAA,EAAAA,KAAI,GAChBI,GAAQC,EAAAA,EAAAA,MACRC,EAAYF,EAAMG,MAAMC,KAG9BC,eAAeC,IACX,MAAMC,EAAmBC,SAASV,EAAUW,MAAMC,KAAK,KAEvD,GAAkB,eAAdR,EACFT,EAAOkB,KAAK,6BAA+BJ,OACtC,CACL,MAAMK,EAAO,CAAEjB,MAAOA,EAAMc,MAAOI,YAAaN,EAAkBO,UAAW5B,GAG3E,GADFa,EAAUU,OAAQ,EACZG,EAAKjB,OAASiB,EAAKC,YAAa,CAChC,MAAME,QAAY3B,EAAWwB,GAC7Bb,EAAUU,OAAQ,EACC,MAAfM,EAAIC,QAAkBD,EAAIH,KAAKK,OAC/BjC,EAAS+B,EAAIH,KAAKK,OAClBnC,EAAW,OAAQoC,KAAKC,UAAUJ,EAAIH,KAAKQ,OAC3CrC,EAAc,SACdU,EAAOkB,KAAK,YACZrB,EAAe,iDAEjBC,EAAawB,EAAIM,QAEvB,CACJ,CACJ,CAEF,MAAMC,GAAeC,EAAAA,EAAAA,KAAS,KAC9B,MAAMC,GAAaC,EAAAA,EAAAA,KACnB,OAAOD,EAAWE,cAAc,IAGxBC,EAAgBC,IACpB,MAAMC,GAAQJ,EAAAA,EAAAA,KACdI,EAAMC,oBAAoBF,EAAI,E,OAGhCG,EAAAA,EAAAA,IAAMjC,EAAUW,OAAO,CAACuB,EAAcC,KACpCC,QAAQC,IAAIH,EAAcC,GAC1BN,EAAaL,EAAab,MAAQ,EAAE,KAGtC2B,EAAAA,EAAAA,KAAU,KACRT,EAAa,EAAE,I,gwBCrFrB,MAAMU,EAAc,EAEpB,O","sources":["webpack://magicter-vpn/./src/pages/auth/verifyCodePage.vue","webpack://magicter-vpn/./src/pages/auth/verifyCodePage.vue?1dd2"],"sourcesContent":["<template>\n    <div class=\"flex flex-col items-center gap-4 w-full text-black-500\">\n            <h1 class=\"text-3xl font-bold\">Verify email!</h1>\n            <EmailDisplay v-if=\"email\" :email=\"email\"/>\n            <p class=\"text-sm\">Enter the code we have sent you</p>\n            <form action=\"\" class=\"w-full flex flex-col gap-3 text-sm\">\n                <div\n                  class=\"grid grid-cols-4 gap-6\">\n                <template v-for=\"(c, index) in codes\" :key=\"index\">\n                    <InputDefault :should-focus=\"index\" :classes=\"'px-8'\" v-model=\"codeArray[index]\" :type=\"'text'\" :min=\"1\" :max=\"1\" :placeholder=\"''\"/>\n                </template>\n \n                </div>\n\n                <ButtonPrimary :link=\"''\" @click=\"verifyCodeFunc\" :is-loading=\"isLoading\">Verify</ButtonPrimary> \n            </form>\n            <router-link class=\"text-purple-500 font-bold text-sm mt-2\" to=\"/auth/signin\">Back to sign in</router-link>\n        </div>\n    </template>\n    \n    <script setup>\n    import ButtonPrimary from '@/molecules/ButtonPrimary.vue';\n    import InputDefault from '@/molecules/InputDefault.vue';\n    import { ref, onMounted, watch, computed } from 'vue'\n    import { useRouter } from 'vue-router';\n    import EmailDisplay from '@/molecules/EmailDisplay.vue';\n    import { useAuth } from '@/composables/useAuth'; \n    import { useAPI } from '@/composables/useAPI'; \n    import { useConfig } from '@/composables/useConfig.js'\n    import { useRoute } from 'vue-router';\n    import { useToast } from '@/composables/useToast.js'\n    import { useRouterStore } from '../../stores/router.state'\n\n    const { getStorage, setStorage,removeStorage, setToken } = useAuth();\n    const { deviceId } = useConfig();\n    const { veriyEmail } = useAPI();\n    const { showSuccessMsg, showErrorMsg } = useToast();\n\n    const router = useRouter();\n    const email = ref(getStorage('email'));\n    const codes = ref([0, 1, 2, 3]);\n    const codeArray = ref([]);\n    const isLoading = ref(false);\n    const route = useRoute();\n    const queryType = route.query.type;\n    \n\n    async function verifyCodeFunc() {\n        const verificationCode = parseInt(codeArray.value.join(''));\n\n        if (queryType === 'forgot-pwd') {\n          router.push('/auth/reset-password?code=' + verificationCode);\n        } else {\n          const data = { email: email.value, verify_code: verificationCode, device_id: deviceId} \n          \n          isLoading.value = true;\n            if (data.email && data.verify_code) {\n                const res = await veriyEmail(data);\n                isLoading.value = false;\n                if (res.status === 200 && res.data.token) {\n                    setToken(res.data.token);\n                    setStorage('user', JSON.stringify(res.data.user));\n                    removeStorage('email')\n                    router.push('/account')\n                    showSuccessMsg('Hello!, Welcome to your Magicter VPN account');\n                } else {\n                  showErrorMsg(res.message)\n                }\n            }\n        }\n    } \n\n  const focusedInput = computed(() => {\n  const routeState = useRouterStore()\n  return routeState.codeInputFocus;\n  })\n\n    const triggerFocus = (num) => {\n      const state = useRouterStore();\n      state.triggerFocusedInput(num)\n    }\n\n    watch(codeArray.value, (newCodeArray, oldCodeArray) => {\n      console.log(newCodeArray, oldCodeArray)\n      triggerFocus(focusedInput.value + 1)\n    });\n\n    onMounted(() => {\n      triggerFocus(0)\n    });\n\n    </script>","import script from \"./verifyCodePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./verifyCodePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getStorage","setStorage","removeStorage","setToken","useAuth","deviceId","useConfig","veriyEmail","useAPI","showSuccessMsg","showErrorMsg","useToast","router","useRouter","email","ref","codes","codeArray","isLoading","route","useRoute","queryType","query","type","async","verifyCodeFunc","verificationCode","parseInt","value","join","push","data","verify_code","device_id","res","status","token","JSON","stringify","user","message","focusedInput","computed","routeState","useRouterStore","codeInputFocus","triggerFocus","num","state","triggerFocusedInput","watch","newCodeArray","oldCodeArray","console","log","onMounted","__exports__"],"sourceRoot":""}